#Day 2
library(tidyverse)#you need to do this each time to load packages
#Saved commands
library(tidyverse)
select(metadata,02)
select(metadata,O2_uM)
#Saved commands
library(tidyverse)
#Commands from tutorial 1
install.packages("tidyverse")
#Saved commands
library(tidyverse)
read.table(file="Saanich.metadata.txt")
read.table(file="Saanich.metadata.txt")
read.table(file="Saanich.metadata.txt")
read.table(file="Saanich.metadata.txt")
View(Saanich.metadata)
#Saved commands
library(tidyverse)
select(metadata,02)
read.table(file="Saanich.metadata.txt")
Saanich.metadata <- read.delim("~/MICB425_portfolio/Saanich.metadata.txt", header=FALSE)
View(Saanich.metadata)
Saanich.OTU <- read.delim("~/MICB425_portfolio/Saanich.OTU.txt", header=FALSE)
View(Saanich.OTU)
read.table(file="Saanich.metadata.txt")
#Saved commands
library(tidyverse)
select(metadata,02)
read.table(file="Saanich.metadata.txt", header=TRUE, row.names=1, sep="\t", na.strings="NAN")
metadata = read.table(file="Saanich.metadata.txt", header=TRUE, row.names=1, sep="\t")
View(Saanich.metadata)
read.table(file="Saanich.metadata.txt")
cd .
cd ..
read.table(file="Saanich.metadata.txt")
read.table(file="Saanich.metadata.txt")
#Commands from tutorial 1
install.packages("tidyverse")
install.packages("tidyverse")
read.table(file="Saanich.metadata.txt")
#Commands from tutorial 1
install.packages("tidyverse")
getwd()
#Commands from tutorial 1
install.packages("tidyverse")
library(tidyverse)
read.table(file="Saanich.metadata.txt")
read.table(file="/Saanich.metadata.txt")
setwd("C:/Documents/MICB425_portfolio")
wd
seeed
showwd
setwd("C:\Users\Ian\Documents\MICB425_portfolio")
setwd("C:\Users\Ian\Documents\MICB425_portfolio")
setwd("C:\Users\Ian\Documents\MICB425_portfolio")
setwd("../")
#Saved commands
library(tidyverse)
read.table(file="/Saanich.metadata.txt")
getwd()
#Commands from tutorial 1
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
read.table(file="/Saanich.metadata.txt")
read.table(file="Saanich.metadata.txt")
read.table(file="Saanich.metadata.txt", header=TRUE, row.names=1, sep="\t", na.strings="NAN")
metadata = read.table(file="Saanich.metadata.txt", header=TRUE, row.names=1, sep="\t")
Saanich.metadata %>%
select(O2_uM)
View(Saanich.metadata)
metadata %>%
mutate(N2O_uM = N2O_nM/1000) %>%
ggplot() + geom_point(aes(x=Depth_m, y=N2O_uM))
biocLite("phyloseq")
source("https://bioconductor.org/biocLite.R")
biocLite("phyloseq")
a
a
biocLite("phyloseq")
library(phyloseq)
#loading the phyloseq data
load("phyloseq_object.RData")
source("https://bioconductor.org/biocLite.R")
biocLite("phyloseq")
detach("package:tidyr", unload=TRUE)
library("tidyr", lib.loc="~/R/win-library/3.4")
source("https://bioconductor.org/biocLite.R")
biocLite("phyloseq")
library(phyloseq)
#loading the phyloseq data
load("phyloseq_object.RData")
#dot plots
ggplot(metadata, aes(x=O2_uM, y=Depth_m))
ggplot(metadata, aes(x=O2_uM, y=Depth_m)) +
geom_point()
metadata %>%
mutate(N2O_uM = N2O_nM/1000) %>%
ggplot() + geom_point(aes(x=Depth_m, y=N2O_uM))
#next function is mutate
metadata %>%
mutate(N2O_uM = N2O_nM/1000) %>%
select(N2O_uM, N2O_nM)
metadata %>%
mutate(N2O_uM = N2O_nM/1000) %>%
ggplot() + geom_point(aes(x=Depth_m, y=N2O_nM))
library(phyloseq)
#loading the phyloseq data
load("phyloseq_object.RData")
Saanich.metadata %>%
select(nM)
Saanich.metadata %>%
select(M)
Saanich.metadata %>%
select()
Saanich.metadata %>%
select(nM)
Saanich.metadata %>%
select(uM)
metadata %>%
select(nM)
metadata %>%
select(M)
select(contains"nM)
metadata %>%
select(contains"nM")
metadata %>%
select(matches"nM")
metadata %>%
select(matches("nM"))
metadata %>%
mutate(CH4_uM = CH4_nM/1000) %>%
ggplot() + geom_point(aes(x=Depth_m, y=CH4_uM))
#dot plots
ggplot(metadata, aes(x=O2_uM, y=Depth_m))
ggplot(metadata, aes(x=O2_uM, y=Depth_m)) +
geom_point()
#equivalent to
ggplot(metadata) +
geom_point(aes(x=O2_uM, y=Depth_m))
#how to change colour or size of plot
ggplot(metadata, aes(x=O2_uM, y=Depth_m, color="blue")) +
geom_point()
#this is correct
ggplot(metadata, aes(x=O2_uM, y=Depth_m)) +
geom_point(color="blue")
#changing the shapes to square
ggplot(metadata, aes(x=O2_uM, y=Depth_m)) +
geom_point(shape="square")
#changing the size of the plot dots
ggplot(metadata, aes(x=O2_uM, y=Depth_m)) +
geom_point(size=10)
#where size equals to an actual variable
ggplot(metadata, aes(x=O2_uM, y=Depth_m, size=OxygenSBE_V)) +
geom_point()
#Excercise 1
ggplot(metadata, aes(x=N2o_uM, y=Depth_m)) +
geom_point(color="purple")
#Excercise 1
ggplot(metadata, aes(x=N2o_nM, y=Depth_m)) +
geom_point(color="purple")
#Excercise 1
ggplot(metadata, aes(x=NO2_nM, y=Depth_m)) +
geom_point(color="purple")
#Excercise 1
ggplot(metadata, aes(x=NO2_uM, y=Depth_m)) +
geom_point(color="purple")
#Excercise 1
ggplot(metadata, aes(x=NO2_uM, y=Depth_m)) +
geom_point(color="purple", shape="triangle")
#Excercise 1
ggplot(metadata, aes(x=NO2_uM, y=Depth_m)) +
geom_point(color="purple", shape="triangle", size=3)
#Excercise 1
ggplot(metadata, aes(x=NO2_uM, y=Depth_m)) +
geom_point(color="purple", shape="1", size=3)
#Excercise 1
ggplot(metadata, aes(x=NO2_uM, y=Depth_m)) +
geom_point(color="purple", shape="26", size=3)
#Excercise 1
ggplot(metadata, aes(x=NO2_uM, y=Depth_m)) +
geom_point(color="purple", shape="triangle", size=3)
#Excercise 1
ggplot(metadata, aes(x=NO2_uM, y=Depth_m)) +
geom_point(color="purple", shape="triangle")
#Excercise 1
ggplot(metadata, aes(x=NO2_uM, y=Depth_m)) +
geom_point(color="purple", shape="square")
#Excercise 1
ggplot(metadata, aes(x=NO2_uM, y=Depth_m)) +
geom_point(color="purple", shape=17)
metadata %>%
select(matches("Temp"))
metadata %>%
mutate(Temperature_F = Temperature_C*1.8+32) %>%
ggplot(metadata, aes(x=Temperature_F, y=Depth_m)) + geom_point()
metadata %>%
mutate(Temperature_F = Temperature_C*1.8+32) %>%
ggplot(metadata, aes_(x=Temperature_F, y=Depth_m)) + geom_point()
metadata %>%
mutate(Temperature_F = Temperature_C*1.8+32) %>%
ggplot(metadata,aes(x=Temperature_F, y=Depth_m)) + geom_point()
metadata %>%
mutate(Temperature_F = Temperature_C*1.8+32) %>%
ggplot(metadata, aes(x=Temperature_F, y=Depth_m)) +
geom_point()
metadata %>%
mutate(Temperature_F = Temperature_C*1.8+32) %>%
ggplot(aes(x=Temperature_F, y=Depth_m)) +
geom_point()
physeq
#something about how convenient phyloseq is because it plays well with the program.
#by doing the next step we can plot a bar graph according to phylum level of communities
plot_bar(physeq, fill="Phylum")
#Phyloseq's transform_sample_counts function is used for a common problem, which is to mutate OTU table values into percentages of total
physeq_percent = transform_sample_counts(physeq, function(x) 100 * x/sum(x))
#now we can plot it accordingly
plot_bar(physeq_percent, fill="Phylum")
#the next thing we're gonna do is to merge all portions of bars that are the same colour together
plot_bar(physeq_percent, fill="Phylum") +
geom_bar(aes(fill=Phylum), stat="identity")
metadata %>%
filter(O2_uM==0) %>%
select(Depth_m)
#Filter rows (samples) where oxygen = 0
metadata %>%
filter(02 = 0)
#Exercise 3
plot_bar(physeq, fill="Family")
plot_bar(physeq_percent, fill="Family")
plot_bar(physeq_percent, fill="Class")
#plotting class cause its easier but filling in the blacks too
plot_bar(physeq_percent, fill="Class") +
geom_bar(aes(fill=Phylum), stat="identity")
plot_bar(physeq_percent, fill="Class") +
geom_bar(aes(x=sample_depth, y=percent_relative_abundance, fill=Phylum), stat="identity")
plot_bar(physeq_percent, fill="Class") +
geom_bar(aes(fill="Class"), stat="identity")
plot_bar(physeq_percent, fill="Class") +
geom_bar(aes(fill=Class), stat="identity")
plot_bar(physeq_percent, fill="Class") +
geom_bar(aes(x=x, y=y fill=Class), stat="identity")
plot_bar(physeq_percent, fill="Class") +
geom_bar(aes(x=x, y=y, fill=Class), stat="identity")
plot_bar(physeq_percent, fill="Class") +
geom_bar(aes(x=x, fill=Class), stat="identity")
plot_bar(physeq_percent, fill="Class") +
geom_bar(aes(fill=Class), stat="identity")
#plotting class cause its easier but filling in the blacks too
#Filling in the labels
plot_bar(physeq_percent, fill="Class") +
geom_bar(aes(fill=Class), stat="identity")+
ggtitle("Classes from 10 to 200m from the Saanich inlet")+
xlab("Sample Depth")+
ylab("Percent Relative Abundance")
#plotting class cause its easier but filling in the blacks too
#Filling in the labels
plot_bar(physeq_percent, fill="Class") +
geom_bar(aes(fill=Class), stat="identity")+
ggtitle("Classes from 10 to 200m in the Saanich inlet")+
xlab("Sample Depth")+
ylab("Percent Relative Abundance")
#Faceting
plot_bar(physeq_percent, fill="Phylum") +
geom_bar(aes(fill=Phylum), stat="identity") +
facet_wrap(~Phylum)
#The scales for each graph can be adjusted to fit each category so that we can visualize relative values
plot_bar(physeq_percent, fill="Phylum") +
geom_bar(aes(fill=Phylum), stat="identity") +
facet_wrap(~Phylum, scales="free_y") +
theme(legend.position="none")
#so it says to use gather to allow for manipulation of the data
metadata %>%
gather("O2,PO4,SiO2,NO3,NH4,NO2")
plot_bar(metadata, fill="O2,PO4,SiO2,NO3,NH4,NO2") +
geom_bar(aes(fill=O2,PO4,SiO2,NO3,NH4,NO2), stat="identity") +
facet_wrap(~Phylum, scales="free_y") +
theme(legend.position="none")
plot_bar(metadata, fill="O2,PO4,SiO2,NO3,NH4,NO2") +
geom_bar(aes(fill=O2,PO4,SiO2,NO3,NH4,NO2), stat="identity") +
facet_wrap(~Depth, scales="free_y") +
theme(legend.position="none")
plot_bar(metadata, fill="O2,PO4,SiO2,NO3,NH4,NO2") +
geom_bar(aes(fill=O2,PO4,SiO2,NO3,NH4,NO2), stat="identity") +
facet_wrap(~O2,PO4,SiO2,NO3,NH4,NO2, scales="free_y") +
theme(legend.position="none")
plot_bar(metadata, fill="O2,PO4,SiO2,NO3,NH4,NO2") +
geom_bar(aes(fill=O2,PO4,SiO2,NO3,NH4,NO2)), stat="identity") +
facet_wrap(~O2,PO4,SiO2,NO3,NH4,NO2, scales="free_y") +
theme(legend.position="none")
plot_bar(physeq, fill="Depth")
plot_bar(physeq, fill="O2")
plot_bar(metadata, fill="Depth")
#so it says to use gather to allow for manipulation of the data
metadata %>%
gather("O2,PO4,SiO2,NO3,NH4,NO2")
#so it says to use gather to allow for manipulation of the data
metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")
phyloseq %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")
plot_bar(physeq_percent, fill="Depth") +
geom_bar(aes(fill=O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM), stat="identity") +
facet_wrap(~Phylum, scales="free_y") +
theme(legend.position="none")
plot_bar(physeq_percent, fill="Nutrient") +
geom_bar(aes(fill=O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM), stat="identity") +
facet_wrap(~Phylum, scales="free_y") +
theme(legend.position="none")
metadata
Nutrientgraph = metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")
nutrientgraph = metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")
plot_bar(nutrientgraph, fill="Depth_m")
View(nutrientgraph)
nutrientgraph = metadata %>%
gather(matches "O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")
nutrientgraph = metadata %>%
gather(matches ("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM"))
plot_bar(nutrientgraph, fill="Depth_m")
View(nutrientgraph)
nutrientgraph
#so it says to use gather to allow for manipulation of the data
metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")
#so it says to use gather to allow for manipulation of the data
metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")+
select("Depth_m, O2_uM, PO4_uM")
#so it says to use gather to allow for manipulation of the data
metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")+
select("Depth_m,O2_uM,PO4_uM")
#so it says to use gather to allow for manipulation of the data
metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")+
filter()
plot_bar(nutrientgraph, fill="Depth_m")
plot_bar(nutrientgraph)
nutrientgraph
nutrientgraph = metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")%>%
select("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")
nutrientgraph = metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")%>%
select("Depth_m")
nutrientgraph = metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")%>%
select("Depth")
nutrientgraph = metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")%>%
select("uM")
nutrientgraph = metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")%>%
select(Matches ("uM"))
nutrientgraph = metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")%>%
select(matches ("uM"))
nutrientgraph = metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")%>%
select(matches("uM"))
View(nutrientgraph)
View(Nutrientgraph)
View(nutrientgraph)
View(Nutrientgraph)
#so it says to use gather to allow for manipulation of the data
metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")+
ggplot(metadata, aes(x=O2_uM, y=Depth_m)) +
geom_point()
#so it says to use gather to allow for manipulation of the data
metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")+
ggplot(metadata, aes(x=O2_uM, y=Depth_m)) +
geom_point()
#so it says to use gather to allow for manipulation of the data
metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")+
ggplot(metadata, aes(x=O2_uM, y=Depth_m)) +
geom_point()
#dot plots
ggplot(metadata, aes(x=O2_uM, y=Depth_m))
ggplot(metadata, aes(x=O2_uM, y=Depth_m)) +
geom_point()
#equivalent to
ggplot(metadata) +
geom_point(aes(x=O2_uM, y=Depth_m))
#so it says to use gather to allow for manipulation of the data
metadata %>%
gather("O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM")+
ggplot(metadata, aes(x=O2_uM, y=Depth_m)) +
geom_point()
ggplot(metadata, aes(x=O2_uM, y=Depth_m)) +
geom_point()
ggplot(metadata, aes(x=Depth_m, y=O2_uM)) +
geom_point()
#first we're gonna remade a simple ggplot with Depth as X axis and O2 as y axis
ggplot(metadata, aes(x=Depth_m, y=O2_uM,NH4_uM)) +
geom_point()
#first we're gonna remade a simple ggplot with Depth as X axis and O2 as y axis
ggplot(metadata, aes(x=Depth_m, y=O2_uM & NH4_uM)) +
geom_point()
#first we're gonna remade a simple ggplot with Depth as X axis and O2 as y axis
ggplot(metadata, aes(x=Depth_m, y=O2_uM & NH4_uM)) +
geom_point()
#first we're gonna remade a simple ggplot with Depth as X axis and O2 as y axis
ggplot(metadata, aes(x=Depth_m, y=O2_uM)) +
geom_point()
#first we're gonna remade a simple ggplot with Depth as X axis and O2 as y axis
ggplot(metadata, aes(x=Depth_m, y=O2_uM)) +
geom_point()+
geom_line()
O2<-ggplot(metadata, aes(x=Depth_m, y=O2_uM)) +
geom_point()+
geom_line()
O2<-ggplot(metadata, aes(x=Depth_m, y=O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM)) +
geom_point()+
geom_line()
O2<-ggplot(metadata, aes(x=Depth_m, y=O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM)) +
geom_point()+
geom_line()
O2<-ggplot(metadata, aes(x=Depth_m, y=O2_uM+PO4_uM+SiO2_uM+NO3_uM+NH4_uM+NO2_uM)) +
geom_point()+
geom_line()
O2+
facet_grid(Depth)
O2+
facet_grid()
#first we're gonna remade a simple ggplot with Depth as X axis and O2 as y axis
ggplot(metadata, aes(x=Depth_m, y=O2_uM,PO4_uM)) +
geom_point()+
geom_line()
#first we're gonna remade a simple ggplot with Depth as X axis and O2 as y axis
ggplot(metadata, aes(x=Depth_m, y=O2_uM,PO4_uM,SiO2_uM,NO3_uM,NH4_uM,NO2_uM)) +
geom_point()+
geom_line()
#first we're gonna remade a simple ggplot with Depth as X axis and O2 as y axis
ggplot(metadata, aes(x=Depth_m, y=O2_uM,PO4_uM,SiO2_uM,)) +
geom_point()+
geom_line()
#first we're gonna remade a simple ggplot with Depth as X axis and O2 as y axis
ggplot(metadata, aes(x=Depth_m, y=O2_uM,PO4_uM)) +
geom_point()+
geom_line()
O2<-ggplot(metadata, aes(x=Depth_m, y=O2_uM,PO4_uM)) +
geom_point()+
geom_line()
View(O2)
O2+
facet_grid(Depth)
O2+
facet_grid("Depth")
O2+
facet_grid(.~Depth)
O2+
facet_grid(.~Depth_m)
O2<-ggplot(metadata, aes(x=Depth_m, y=O2_uM)) +
geom_point()+
geom_line()
PO4<-ggplot(metadata, aes(x=Depth_m, y=PO4_uM)) +
geom_point()+
geom_line()
SiO2<-ggplot(metadata, aes(x=Depth_m, y=siO2_uM)) +
geom_point()+
geom_line()
NO3<-ggplot(metadata, aes(x=Depth_m, y=NO3_uM)) +
geom_point()+
geom_line()
NH4<-ggplot(metadata, aes(x=Depth_m, y=NH4_uM)) +
geom_point()+
geom_line()
No2<-ggplot(metadata, aes(x=Depth_m, y=NO2_uM)) +
geom_point()+
geom_line()
O2NO2PO4SiO2+
facet_grid(.~Depth_m)
O2+
NO2+
PO4+
SiO2+
facet_grid(.~Depth_m)
O2+
NO2+
PO4+
SiO2+
facet_grid(.~Depth_m)
O2+
PO4+
SiO2+
facet_grid(.~Depth_m)
O2
metadata %>%
gather(Nutrients_uM, uM, NH4_uM, NO2_uM, NO3_uM, O2_uM, PO4_uM, SiO2_uM) %>%
ggplot() +geom_point(aes(x=Depth_m, y=uM)) + geom_line(aes(x=Depth_m, y=uM)) +
facet_wrap(~Nutrients_uM, scales="free_y")
View(metadata)
